// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

#include <odb/pre.hxx>

#include "Location-odb.h"

#include <cassert>
#include <cstring>  // std::memcpy


#include <odb/mssql/traits.hxx>
#include <odb/mssql/database.hxx>
#include <odb/mssql/transaction.hxx>
#include <odb/mssql/connection.hxx>
#include <odb/mssql/statement.hxx>
#include <odb/mssql/statement-cache.hxx>
#include <odb/mssql/container-statements.hxx>
#include <odb/mssql/exceptions.hxx>

namespace odb
{
  // Location
  //

  void access::composite_value_traits< ::Location, id_mssql >::
  bind (mssql::bind* b,
        image_type& i,
        mssql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (b);
    ODB_POTENTIALLY_UNUSED (i);
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace mssql;

    std::size_t n (0);
    ODB_POTENTIALLY_UNUSED (n);

    // lat
    //
    b[n].type = mssql::bind::float8;
    b[n].buffer = &i.lat_value;
    b[n].size_ind = &i.lat_size_ind;
    b[n].capacity = 53;
    n++;

    // lng
    //
    b[n].type = mssql::bind::float8;
    b[n].buffer = &i.lng_value;
    b[n].size_ind = &i.lng_size_ind;
    b[n].capacity = 53;
    n++;
  }

  void access::composite_value_traits< ::Location, id_mssql >::
  init (image_type& i,
        const value_type& o,
        mssql::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (i);
    ODB_POTENTIALLY_UNUSED (o);
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace mssql;

    // lat
    //
    {
      double const& v =
        o.lat;

      bool is_null (false);
      mssql::value_traits<
          double,
          mssql::id_float8 >::set_image (
        i.lat_value, is_null, v);
      i.lat_size_ind = is_null ? SQL_NULL_DATA : 0;
    }

    // lng
    //
    {
      double const& v =
        o.lng;

      bool is_null (false);
      mssql::value_traits<
          double,
          mssql::id_float8 >::set_image (
        i.lng_value, is_null, v);
      i.lng_size_ind = is_null ? SQL_NULL_DATA : 0;
    }
  }

  void access::composite_value_traits< ::Location, id_mssql >::
  init (value_type& o,
        const image_type&  i,
        database* db)
  {
    ODB_POTENTIALLY_UNUSED (o);
    ODB_POTENTIALLY_UNUSED (i);
    ODB_POTENTIALLY_UNUSED (db);

    // lat
    //
    {
      double& v =
        o.lat;

      mssql::value_traits<
          double,
          mssql::id_float8 >::set_value (
        v,
        i.lat_value,
        i.lat_size_ind == SQL_NULL_DATA);
    }

    // lng
    //
    {
      double& v =
        o.lng;

      mssql::value_traits<
          double,
          mssql::id_float8 >::set_value (
        v,
        i.lng_value,
        i.lng_size_ind == SQL_NULL_DATA);
    }
  }
}

#include <odb/post.hxx>
